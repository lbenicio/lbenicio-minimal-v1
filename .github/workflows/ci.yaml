name: CI/CD Pipeline
on: 
  push:
    branches:
      - main
      - pagination
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - "docs/"
      - ".gitignore"
      - "CNAME"
      - ".ruby-version"
      - "benchmark"
      - ".jekyll-cache"
      - "Rakefile"
      - "CHANGELOG.md"
jobs:
  Unit-Tests:
    runs-on: ubuntu-latest
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@master
        with:
          ruby-version: 2.7
      - name: Install Dependencies
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: |
          sudo apt-get update
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Build Jekyll
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: bundle exec jekyll build
      - name: Testsuite
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: bundle exec rake test
      - name: Results
        run: echo "üçè This job's status is ${{ job.status }}."
  Build-and-Deploy:
    runs-on: ubuntu-latest
    needs: [Unit-Tests, benchmark, rubocop]
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@master
        with:
          ruby-version: 2.7
      - name: Install Dependencies
        env:
          RAILS_ENV: production
          JEKYLL_ENV: production
        run: |
          sudo apt-get update && sudo apt-get -y install minify
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          gem install rubocop
      - name: Build
        env:
          RAILS_ENV: production
          JEKYLL_ENV: production
        run: bundle exec jekyll build
      - name: Results
        run: echo "üçè This job's status is ${{ job.status }}."
  rubocop:
    name: "Rubocop"
    permissions:
      contents: read
      pull-requests: read
      actions: read
    runs-on: ubuntu-latest
    needs: Unit-Tests
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@master
        with:
          ruby-version: 2.7
      - name: Install Dependencies
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: |
          sudo apt-get update && sudo apt-get -y install minify
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          gem install rubocop
      - name: Build Jekyll
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: bundle exec jekyll build
      - name: rubocop
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: rubocop
  profiler:
    name: "Profiler"
    runs-on: "ubuntu-latest"
    needs: Unit-Tests
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    steps:
      - name: Checkout Jekyll
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ github.event.inputs.ruby_version }}
          bundler-cache: true
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@master
        with:
          ruby-version: 2.7
      - name: Install Dependencies
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: |
          sudo apt-get update && sudo apt-get -y install minify
      - name: Bundle Install
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Build Jekyll
        run: bundle exec jekyll build
      - name: Run Profiler
        run: "bundle exec rake profile:memory"
  stress-test:
    name: "Stress Test"
    runs-on: "ubuntu-latest"
    needs: Unit-Tests
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    env:
      BENCHMARK: true
    steps:
      - name: Checkout Jekyll
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ github.event.inputs.ruby_version }}
          bundler-cache: true
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@master
        with:
          ruby-version: 2.7
      - name: Install Dependencies
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: |
          sudo apt-get update && sudo apt-get -y install minify
      - name: Bundle Install
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Build Jekyll
        run: bundle exec jekyll build
      - name: Run Benchmark
        run: "bundle exec ruby benchmark/capture-assign.rb"
  benchmark:
    name: "Benchmark"
    runs-on: "ubuntu-latest"
    needs: Unit-Tests
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    env:
      BENCHMARK: true
    steps:
      - name: Checkout Jekyll
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ github.event.inputs.ruby_version }}
          bundler-cache: true
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@master
        with:
          ruby-version: 2.7
      - name: Install Dependencies
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: |
          sudo apt-get update && sudo apt-get -y install minify
      - name: Bundle Install
        env:
          RAILS_ENV: test
          JEKYLL_ENV: test
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Build Jekyll
        run: bundle exec jekyll build
      - name: Run Benchmark
        run: "c=$(int_size=$(a=$(find _site -type f -name '*.html' -exec du -ak {} + | sort -nr | head -n 1) | size=${a:0:3} | echo $size | sed -E 's,\\t|\\r|\\n,,g') | echo $((int_size))) | if [ $c -lt 50 ]; then exit 2; else exit 0; fi;"
  notification:
    name: "Notification"
    needs: [Build-and-Deploy, release]
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.ChatID }}
          token: ${{ secrets.BotToken }}
          message: |
              ‚úÖ Code Deployed: ${{ github.repository }}

              ${{ github.actor }} created commit:
              ${{ github.event.commits[0].message }}
              
              Repository: ${{ github.repository }}
              
              See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
  release:
    name: "Release"
    needs: [Unit-Tests, benchmark, rubocop]
    if: "contains(github.event_name, 'pull_request') || github.event_name == 'push'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: CupOfTea696/gh-action-auto-release@v1.0.2
        with:
          title: "Release: $version"
          tag: "v$semver"
          draft: false
          regex: "/^release: v#{semver}$/i"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
